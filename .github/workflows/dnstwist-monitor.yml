name: DNSTwist Monitor

on:
  schedule:
    - cron: "0 6,18 * * *"   # twice daily (UTC)
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: dnstwist-monitor
  cancel-in-progress: true

jobs:
  scan:
    runs-on: ubuntu-latest
    env:
      # Secrets (set in Settings > Secrets and variables > Actions)
      WATCH_DOMAINS: ${{ secrets.WATCH_DOMAINS }}
      RISKY_KEYWORDS: ${{ secrets.RISKY_KEYWORDS }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Public knobs
      LSH_THRESHOLD: "75"
      PHASH_THRESHOLD: "85"
      SHORTLIST_CAP: "120"
      TLD_FILE: "tlds.txt"
      MIN_SCORE: "2"                # require at least this score to alert
      ALLOWLIST: ${{ secrets.ALLOWLIST }}  # optional: e.g. "relay.dev, relay.io"
      THREADS: "6"                  # we already added; keeps scans polite
      TIMEOUT_SECS: "15"
      NAME_EDIT_DISTANCE_MAX: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Chrome (for pHash screenshots)
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1

      - name: Setup Python (to install DNSTwist CLI)
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install DNSTwist
        run: |
          python -m pip install --upgrade pip
          pip install "dnstwist[full]"

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .dnstwist-cache
          key: dnstwist-${{ github.ref_name }}
          restore-keys: |
            dnstwist-

      - name: Ensure cache dir
        run: mkdir -p .dnstwist-cache

      - name: Phase A - shortlist with LSH
        id: shortlist
        run: node .github/scripts/phase_a_shortlist.js

      - name: Phase B - pHash shortlist
        if: steps.shortlist.outputs.shortlist_count != '0'
        env:
          CHROME_BIN: ${{ steps.setup-chrome.outputs.chrome-path }}
        run: node .github/scripts/phash_shortlist.js

      - name: Build findings
        id: filter
        run: node .github/scripts/build_findings.js

      - name: HTTP diagnostics
        if: steps.filter.outputs.has_findings == 'true'
        run: node .github/scripts/postcheck_http.js

      - name: RDAP enrich (registrar/abuse)
        if: steps.filter.outputs.has_findings == 'true'
        run: node .github/scripts/enrich_rdap.js

      - name: Upload diagnostics (2 days)
        if: steps.filter.outputs.has_findings == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dnstwist-diagnostics
          retention-days: 2
          path: |
            http_diagnostics.json
            findings.json
            findings_enriched.json

      - name: Slack notify (if findings)
        if: steps.filter.outputs.has_findings == 'true'
        run: node .github/scripts/slack_notify.js
